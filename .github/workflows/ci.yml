name: CI

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      VERBOSE: 1
      GOFLAGS: -mod=readonly

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: make build

  # TODO: Replace with Action
  # https://github.com/golangci/golangci-lint-action
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      VERBOSE: 1
      GOFLAGS: -mod=readonly

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint
        run: make lint

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      VERBOSE: 1
      GOFLAGS: -mod=readonly

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: make test

  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build image
        run: |
          REPOSITORY=$(echo $GITHUB_REPOSITORY/${{ github.event.repository.name }} | tr '[A-Z]' '[a-z]')
          TAG=${GITHUB_REF#"refs/heads/"}-${GITHUB_SHA:0:7}

          docker build -t docker.pkg.github.com/${REPOSITORY}:${TAG} .
        if: github.event_name == 'push'

      - name: Login to GitHub Package Registry
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'push'

      - name: Push images
        run: |
          REPOSITORY=$(echo $GITHUB_REPOSITORY/${{ github.event.repository.name }} | tr '[A-Z]' '[a-z]')

          docker push docker.pkg.github.com/${REPOSITORY}
        if: github.event_name == 'push'
